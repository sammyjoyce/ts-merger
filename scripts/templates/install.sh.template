#!/bin/bash
set -e

# Repository information (will be replaced during build)
GITHUB_OWNER="{{GITHUB_OWNER}}"
GITHUB_REPO="{{GITHUB_REPO}}"
GITHUB_REPOSITORY="{{GITHUB_REPOSITORY}}"

# Detect OS
OS="$(uname -s)"
case "${OS}" in
    Linux*)     MACHINE=linux;;
    Darwin*)    MACHINE=macos;;
    *)          echo "Unsupported operating system: ${OS}"; exit 1;;
esac

# Detect architecture
ARCH="$(uname -m)"
case "${ARCH}" in
    x86_64*)    ARCH=x64;;
    arm64*)     ARCH=arm64;;
    *)          echo "Unsupported architecture: ${ARCH}"; exit 1;;
esac

# Get the latest release info
API_URL="https://api.github.com/repos/${GITHUB_REPOSITORY}/releases/latest"
if command -v curl > /dev/null; then
    RELEASE=$(curl -s "$API_URL")
elif command -v wget > /dev/null; then
    RELEASE=$(wget -qO- "$API_URL")
else
    echo "Error: curl or wget is required"
    exit 1
fi

# Get the latest version tag
VERSION_TAG=$(echo "$RELEASE" | grep -o '"tag_name": "[^"]*"' | head -n 1 | cut -d'"' -f4)
if [ -z "$VERSION_TAG" ]; then
    echo "Error: No release found"
    exit 1
fi

# Get the download URL for the latest release
DOWNLOAD_URL="https://github.com/${GITHUB_REPOSITORY}/releases/download/${VERSION_TAG}/${GITHUB_REPO}-${MACHINE}-${ARCH}"

# Installation directory
INSTALL_DIR="/usr/local/bin"
[ ! -d "$INSTALL_DIR" ] && sudo mkdir -p "$INSTALL_DIR"

echo "Downloading ${GITHUB_REPO} version ${VERSION_TAG}..."
if command -v curl > /dev/null; then
    sudo curl -L -o "${INSTALL_DIR}/${GITHUB_REPO}" "${DOWNLOAD_URL}"
elif command -v wget > /dev/null; then
    sudo wget -O "${INSTALL_DIR}/${GITHUB_REPO}" "${DOWNLOAD_URL}"
fi

# Make executable
sudo chmod +x "${INSTALL_DIR}/${GITHUB_REPO}"

echo "${GITHUB_REPO} ${VERSION_TAG} has been installed to ${INSTALL_DIR}/${GITHUB_REPO}"
echo "Run '${GITHUB_REPO} --help' to get started"
